"""
 -선형 모델 인데 좀 힘들어보여서 주석처리후 다른모델사용함.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 데이터 불러오기 (예시 데이터)
#data = pd.read_excel('data.xlsx',sheet_name='data')
file_path = r'C:\Users\hjc\PycharmProjects\AI_MiniProject2\venv\Scripts\data.xlsx'
data = pd.read_excel(file_path, sheet_name=0)

#print(data.head())

# 특성과 타겟 변수 선택
X = data[['4번온도']]
y = data['4번_농도']

# 훈련 데이터와 테스트 데이터로 나누기
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 선형 회귀 모델 생성
model = LinearRegression()

# 모델 훈련
model.fit(X_train, y_train)

# 테스트 데이터에 대한 예측
y_pred = model.predict(X_test)

# 모델 평가
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R^2 Score:", r2)

# 예측 시각화
plt.scatter(X_test, y_test, color='black')
plt.plot(X_test, y_pred, color='blue', linewidth=3)
plt.xlabel('Temperature')
plt.ylabel('Concentration')
plt.title('Linear Regression Prediction')
plt.show()

"""